{"version":3,"file":"static/js/133.cc7726d5.chunk.js","mappings":"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","sources":["webpack://manage_budget/./src/components/Layout/User/Home/HomeDashboard/HomeDashboard.module.css?79b2","webpack://manage_budget/./src/components/Layout/User/Home/HomeDashboard/DashboardItem/DashboardItem.module.css?5abd","components/Layout/User/Home/HomeDashboard/DashboardItem/DashboardItem.js","components/Layout/User/Home/HomeDashboard/HomeDashboard.js","webpack://manage_budget/./src/components/Layout/User/Home/UserDetail/UserDetail.module.css?9b8a","components/Layout/User/Home/UserDetail/UserDetail.js","components/Layout/User/Home/UserHome.js","hooks/Use-fetch.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dashboard__container\":\"HomeDashboard_dashboard__container__IdKE+\",\"dashboard__filter__container\":\"HomeDashboard_dashboard__filter__container__3l7e9\",\"month_wiseBreakup_link\":\"HomeDashboard_month_wiseBreakup_link__z+56X\"};","// extracted by mini-css-extract-plugin\nexport default {\"dashboard__item\":\"DashboardItem_dashboard__item__O+ahr\",\"item__month\":\"DashboardItem_item__month__RFxMF\",\"item__percentage__section\":\"DashboardItem_item__percentage__section__fRPTz\",\"item__amount\":\"DashboardItem_item__amount__hXAt5\"};","import classes from './DashboardItem.module.css'\r\nconst DashboardItem = props => {\r\n    const widthPercentage = ((props.totalAmount/props.yearlyTotal)*100).toFixed(2)+'%' \r\n    return (\r\n        <div className={classes.dashboard__item}>\r\n            <article className={classes.item__month}>{props.month}</article>\r\n            <section className={classes.item__percentage__section}>\r\n                <article style={{width:widthPercentage}}>&nbsp;</article> \r\n            </section> \r\n            <article className={classes.item__amount}>Rs. {props.totalAmount}</article>\r\n        </div>\r\n    )\r\n}\r\nexport default DashboardItem","import React, { Fragment, useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport useFetch from \"../../../../../hooks/Use-fetch\";\r\nimport Spinner from \"../../../../Generic/Spinner/Spinner\";\r\nimport classes from './HomeDashboard.module.css'\r\nimport DashboardItem from './DashboardItem/DashboardItem' \r\n\r\n/* const DUMMY_EXPENSES = [\r\n    { 'amount': \"100\", 'category': \"Food1\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"100\", 'category': \"Food1\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"100\", 'category': \"Food1\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"100\", 'category': \"Food1\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"100\", 'category': \"Food1\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"100\", 'category': \"Food1\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n\r\n\r\n\r\n    { 'amount': \"100\", 'category': \"Food2\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"100\", 'category': \"Food2\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"100\", 'category': \"Food2\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"100\", 'category': \"Food2\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"100\", 'category': \"Food2\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n\r\n    { 'amount': \"100\", 'category': \"Food3\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"60\", 'category': \"Food4\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"100\", 'category': \"Food5\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n\r\n    { 'amount': \"100\", 'category': \"Food6\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"100\", 'category': \"Food6\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"100\", 'category': \"Food6\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"100\", 'category': \"Food6\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"100\", 'category': \"Food6\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n\r\n    { 'amount': \"5000\", 'category': \"Rent\", 'date': new Date(\"2022-06-16\"), 'description': \"Rent\", 'month': \"June\", 'year': \"2022\" },\r\n\r\n\r\n    { 'amount': \"54\", 'category': \"Food\", 'date': new Date(\"2021-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2021\" },\r\n    { 'amount': \"100\", 'category': \"Food\", 'date': new Date(\"2022-07-01\"), 'description': \"Snacks\", 'month': \"July\", 'year': \"2022\" },\r\n    { 'amount': \"120\", 'category': \"Food\", 'date': new Date(\"2022-05-17\"), 'description': \"Meat\", 'month': \"May\", 'year': \"2022\" },\r\n    { 'amount': \"50\", 'category': \"Drinks\", 'date': new Date(\"2021-07-23\"), 'description': \"Pepsi\", 'month': \"July\", 'year': \"2021\" }\r\n].sort((a, b) => a.date - b.date) */\r\nvar MONTH_LIST = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n/* \r\nvar DUMMY_YEARLY_DATA = [{ month: 'January', totalAmount: 0 },\r\n{ month: 'February', totalAmount: 0 },\r\n{ month: 'March', totalAmount: 0 },\r\n{ month: 'April', totalAmount: 0 },\r\n{ month: 'May', totalAmount: 0 },\r\n{ month: 'June', totalAmount: 6860 },\r\n{ month: 'July', totalAmount: 0 },\r\n{ month: 'August', totalAmount: 0 },\r\n{ month: 'September', totalAmount: 0 },\r\n{ month: 'October', totalAmount: 0 },\r\n{ month: 'November', totalAmount: 0 },\r\n{ month: 'December', totalAmount: 0 }] */\r\nconst HomeDashboard = props => {\r\n    //const [selectedYear, setSelectedYear] = useState('')\r\n    const [selectedYearData, setSelectedYearData] = useState(undefined)\r\n    const [expenseData, setExpenseData] = useState(undefined)\r\n    const [yearList,setYearList]=useState([])\r\n    const history = useHistory()\r\n\r\n    const userId = useMemo(() => props.userId, [props])\r\n    const USER_DB_URL = useMemo(() => `https://managebudget-12b75-default-rtdb.firebaseio.com/userDetail_DB_${userId}.json`, [userId]);\r\n    const { isLoading, fetchExpense } = useFetch()\r\n\r\n    const getExpenseData = useCallback(async () => {\r\n        const data = await fetchExpense(USER_DB_URL)\r\n        setExpenseData(data)\r\n    }, [fetchExpense, USER_DB_URL])\r\n\r\n    useEffect(() => {\r\n        if (expenseData === undefined) {\r\n            getExpenseData();\r\n        }\r\n    }, [expenseData, getExpenseData])\r\n\r\n    const calculateAnalysisData = selectedYear => {\r\n        const info = expenseData.filter(expense => expense.year === String(selectedYear))\r\n        const resultData = []\r\n        MONTH_LIST.forEach(month => {\r\n            const totalAmount = info.filter(expense => expense.month === month)\r\n                    .reduce((sum, expense) => sum + parseInt(expense.amount), 0)\r\n            resultData.push({\r\n                month,\r\n                totalAmount\r\n            })\r\n        });\r\n        return resultData\r\n    }\r\n     \r\n    if (!selectedYearData && expenseData && expenseData != null) { \r\n        const yearArray = [...new Set(expenseData.map(expesne => parseInt(expesne.year)))].sort((a, b) => b - a);\r\n\r\n        const choosenYear = yearArray[0]\r\n        const analysisData = calculateAnalysisData(choosenYear)\r\n\r\n        if(yearList.length === 0){\r\n            setYearList(yearArray)\r\n        }\r\n        setSelectedYearData({\r\n            choosenYear,\r\n            analysisData\r\n        }) \r\n    } \r\n\r\n    const changeYearHandler = event => {\r\n        const choosenYear = event.target.value\r\n        const analysisData = calculateAnalysisData(choosenYear)\r\n        setSelectedYearData({\r\n            choosenYear,\r\n            analysisData\r\n        })\r\n    }\r\n\r\n    const showMonthWiseBreakup = () => {\r\n        history.push('/expenses')\r\n    }\r\n    const isInvalidResponse = !selectedYearData || expenseData === undefined || isLoading\r\n\r\n    if (isInvalidResponse) {\r\n        return <Spinner />\r\n    }\r\n    if (expenseData === null) {\r\n        return (<article className='message__text error_message'>Problem Occured !</article>)\r\n    }\r\n    if (selectedYearData.choosenYear === undefined) {\r\n        return (<article className='message__text norecord_message'> --- No Record Found ! ---</article>)\r\n    }\r\n    if(!isInvalidResponse && expenseData !== null){\r\n        const yearlyTotal = selectedYearData.analysisData.reduce((sum, expense) => sum + expense.totalAmount, 0)\r\n        return (\r\n            <Fragment>\r\n                <div className={classes.dashboard__filter__container}>\r\n                    <select defaultValue={selectedYearData.choosenYear} onChange={changeYearHandler}>\r\n                        {yearList.map(year => <option key={year} value={year}>{year}</option>)}\r\n                    </select>\r\n                </div>\r\n                <section className={classes.dashboard__container}>\r\n                    {\r\n                        selectedYearData.analysisData.map((info, index) => {\r\n                            return (<DashboardItem key={index}\r\n                                month={info.month}\r\n                                totalAmount={info.totalAmount}\r\n                                yearlyTotal={yearlyTotal} />)\r\n                        })\r\n                    }\r\n                </section>\r\n                <div className={classes.month_wiseBreakup_link}>\r\n                    <button onClick={showMonthWiseBreakup}>View Month Wise Breakup</button>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n    \r\n}\r\nexport default HomeDashboard","// extracted by mini-css-extract-plugin\nexport default {\"user__detail\":\"UserDetail_user__detail__nsz3W\",\"user__detail__header\":\"UserDetail_user__detail__header__Tpc72\",\"user__detail__info\":\"UserDetail_user__detail__info__gu4I1\",\"error_message\":\"UserDetail_error_message__wlFGx\"};","import { useCallback, useEffect, useMemo, useState } from 'react'\r\nimport useFetch from '../../../../../hooks/Use-fetch'\r\nimport classes from './UserDetail.module.css'\r\nimport Spinner from '../../../../Generic/Spinner/Spinner'\r\n/* const DUMMY_USER = {\r\n    id: 1, username: 'Souryadeep', email: 'roychowdhurysouryadeep@gmail.com', fullName: 'Souryadeep Roy Chowdhury', password: 'DeepSourya#1234'\r\n} */\r\nconst USER_DB_URL = 'https://managebudget-12b75-default-rtdb.firebaseio.com/users.json'\r\nconst UserDetail = props => {\r\n\r\n    const userId = useMemo(() => props.userId, [props])\r\n    const { isLoading, fetchUser } = useFetch()\r\n\r\n    const [userInfo, setUserInfo] = useState(undefined)\r\n    const getUserData = useCallback(async () => {\r\n        const user = await fetchUser(USER_DB_URL, parseInt(userId))\r\n\r\n        setUserInfo(user)\r\n    }, [fetchUser, userId])\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            getUserData()\r\n        }\r\n    }, [userInfo, getUserData])\r\n    if (userInfo === undefined || isLoading) {\r\n        return <Spinner />\r\n    }\r\n    if (userInfo === null) {\r\n        return (<article className={classes.error_message}>Problem Occured !</article>)\r\n    }\r\n    return (\r\n        <div className={classes.user__detail}>\r\n            <header className={classes.user__detail__header}>Welcome {userInfo.username}</header>\r\n            <section className={classes.user__detail__info}>\r\n                <div>\r\n                    <article>Full Name :</article>\r\n                    <article>{userInfo.fullName}</article>\r\n                </div>\r\n                <div>\r\n                    <article>E-mail :</article>\r\n                    <article>{userInfo.email}</article>\r\n                </div>\r\n            </section>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default UserDetail","import { Fragment } from \"react\";\r\nimport HomeDashboard from \"./HomeDashboard/HomeDashboard\";\r\nimport UserDetail from \"./UserDetail/UserDetail\";\r\n\r\nconst UserHome = props => { \r\n    return (\r\n        <Fragment>\r\n            <UserDetail userId={props.userId} />\r\n            <HomeDashboard userId={props.userId} />\r\n        </Fragment>\r\n    )\r\n}\r\nexport default UserHome","import {  useState,useCallback } from \"react\"\r\n\r\nconst useFetch = () => {\r\n\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const convertDataToArray = async (data) => {\r\n        const userData = []\r\n        if (data != null) {\r\n            for (const key in data) {\r\n                userData.push({\r\n                    id: data[key].id,\r\n                    email: data[key].email,\r\n                    password: data[key].password,\r\n                    username: data[key].username,\r\n                    fullName: data[key].fullName,\r\n                })\r\n            }\r\n        }\r\n        return userData\r\n    }\r\n    const convertExpenseDataToArray = async (data) => {\r\n        const expenseData = []\r\n        if (data != null) {\r\n            for (const key in data) {\r\n                expenseData.push({\r\n                    description: data[key].description,\r\n                    category: data[key].category,\r\n                    amount: data[key].amount,\r\n                    date: new Date(data[key].date),\r\n                    month: (new Date(data[key].date)).toLocaleDateString('en-US',{month:'long'}),\r\n                    year:(new Date(data[key].date)).toLocaleDateString('en-US',{year:'numeric'})\r\n                })\r\n            }\r\n        }\r\n        return expenseData.sort((a, b) => a.date - b.date)\r\n    }\r\n    const sendRequest = async (url, requestConfig) => {\r\n        setIsLoading(true)\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: requestConfig ? requestConfig.method : 'GET',\r\n                body: requestConfig ? JSON.stringify(requestConfig.body) : null,\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            const data = await response.json()\r\n            setIsLoading(false)\r\n            return data\r\n        } catch (error) {\r\n            throw new Error('Some Problem Occured!')\r\n        }\r\n    }\r\n    const fetchUserData = async (url) => {\r\n        try {\r\n            const data = await sendRequest(url, {})\r\n            const convertedData = await convertDataToArray(data)\r\n            setIsLoading(false)\r\n            return convertedData\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        setIsLoading(false)\r\n        return null\r\n    }\r\n    const checkUserExistance = async (url, email) => {\r\n        try {\r\n            const data = await sendRequest(url, {})\r\n            const convertedData = await convertDataToArray(data)\r\n            setIsLoading(false)\r\n            return convertedData.find(user => user.email === email)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        setIsLoading(false)\r\n        return null\r\n    }\r\n    const addUser = async (url, requestConfig) => {\r\n        try {\r\n            const data = await sendRequest(url, requestConfig)\r\n            if (data) {\r\n                setIsLoading(false)\r\n                return true\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        setIsLoading(false)\r\n        return false\r\n    }\r\n    const fetchUser = async (url,userId) => {\r\n        try {\r\n            const data = await sendRequest(url, {})\r\n            const convertedData = await convertDataToArray(data) \r\n            setIsLoading(false)\r\n            return convertedData.find(user => user.id === userId)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        setIsLoading(false)\r\n        return null\r\n    }\r\n    const addExpense = async (url,requestConfig) => { \r\n        try {\r\n            const data = await sendRequest(url, requestConfig)\r\n            if (data) {\r\n                setIsLoading(false)\r\n                return true\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        setIsLoading(false)\r\n        return false\r\n    }\r\n    const fetchExpense =   useCallback(async (url) => {\r\n        setIsLoading(true)\r\n        try {\r\n            const data = await sendRequest(url, {})\r\n            const convertedData = await convertExpenseDataToArray(data)\r\n            setIsLoading(false)\r\n            return convertedData\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        setIsLoading(false)\r\n        return null\r\n    },[])\r\n    return {\r\n        isLoading,\r\n        fetchUserData,\r\n        checkUserExistance,\r\n        addUser,\r\n        fetchUser,\r\n        addExpense,\r\n        fetchExpense\r\n    }\r\n\r\n}\r\nexport default useFetch","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["props","widthPercentage","totalAmount","yearlyTotal","toFixed","className","classes","month","style","width","MONTH_LIST","useState","undefined","selectedYearData","setSelectedYearData","expenseData","setExpenseData","yearList","setYearList","history","useHistory","userId","useMemo","USER_DB_URL","useFetch","isLoading","fetchExpense","getExpenseData","useCallback","data","useEffect","calculateAnalysisData","selectedYear","info","filter","expense","year","String","resultData","forEach","reduce","sum","parseInt","amount","push","yearArray","Set","map","expesne","sort","a","b","choosenYear","analysisData","length","isInvalidResponse","Spinner","Fragment","defaultValue","onChange","event","target","value","index","onClick","fetchUser","userInfo","setUserInfo","getUserData","user","username","fullName","email","setIsLoading","convertDataToArray","userData","key","id","password","convertExpenseDataToArray","description","category","date","Date","toLocaleDateString","sendRequest","url","requestConfig","fetch","method","body","JSON","stringify","headers","response","json","Error","fetchUserData","convertedData","console","log","checkUserExistance","find","addUser","addExpense","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}