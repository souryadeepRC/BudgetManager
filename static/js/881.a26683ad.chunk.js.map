{"version":3,"file":"static/js/881.a26683ad.chunk.js","mappings":"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","sources":["webpack://manage_budget/./src/components/Layout/User/AllExpense/CategoryExpense/CategoryExpense.module.css?a306","components/Layout/User/AllExpense/CategoryExpense/CategoryExpense.js","webpack://manage_budget/./src/components/Layout/User/AllExpense/UserMonthlyExpense/UserMonthlyExpense.module.css?f54c","components/Layout/User/AllExpense/UserMonthlyExpense/UserMonthlyExpense.js","webpack://manage_budget/./src/components/Layout/User/AllExpense/UserMonthYearExpense/UserMonthYearExpense.module.css?1d95","components/Layout/User/AllExpense/UserMonthYearExpense/UserMonthYearExpense.js","webpack://manage_budget/./src/components/Layout/User/AllExpense/UserAllExpense.module.css?9579","components/Layout/User/AllExpense/UserAllExpense.js","hooks/Use-fetch.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"expense__box\":\"CategoryExpense_expense__box__TpgXZ\"};","import classes from './CategoryExpense.module.css'\r\n\r\nconst CategoryExpense = props => {\r\n    //console.log(props);\r\n    const { expense } = props\r\n    return (\r\n        <div className={classes.expense__box}>\r\n            <header>{expense.category}</header>\r\n            <section>\r\n                {\r\n                    expense.expenseDetail.map((expense, index) => {\r\n                        const day = new Date(expense.date).toLocaleDateString('en-US', { month: 'short',weekday: 'long', day: 'numeric' })\r\n                        return (\r\n                            <article key={index}>\r\n                                <p>{expense.description}</p>\r\n                                <p>{day}</p>\r\n                                <p>Rs. {expense.amount}</p>\r\n                            </article>\r\n                        )\r\n                    })\r\n                }\r\n            </section>\r\n            <footer>Total : Rs. {expense.totalAmount}</footer>\r\n        </div>)\r\n}\r\n\r\nexport default CategoryExpense\r\n","// extracted by mini-css-extract-plugin\nexport default {\"expense__detail\":\"UserMonthlyExpense_expense__detail__kuN24\",\"expense__container\":\"UserMonthlyExpense_expense__container__WPn2u\"};","import CategoryExpense from \"../CategoryExpense/CategoryExpense\";\r\nimport classes from './UserMonthlyExpense.module.css'\r\n\r\nconst UserMonthlyExpense = props => { \r\n    const { year, month, expenseDetail: allExpense } = props\r\n    const convertBasedOnCategory = data => {\r\n        let convertedData = []\r\n        const uniqueCategory = [...new Set(data.map(expense => expense.category))]\r\n        uniqueCategory.forEach(category => {\r\n            const categoryData = data.filter(expense => expense.category === category)\r\n            const totalAmount = categoryData.reduce((sum, expense) => sum + parseInt(expense.amount), 0)\r\n            convertedData.push({\r\n                category,\r\n                totalAmount,\r\n                expenseDetail: categoryData\r\n\r\n            })\r\n        });\r\n        return convertedData\r\n    }\r\n    const convertedExpenseData = convertBasedOnCategory(allExpense)\r\n    const totalMonthlyExpense = convertedExpenseData.reduce((sum, expense) => sum + expense.totalAmount, 0)\r\n     \r\n    return (\r\n        <div className={classes.expense__detail}>\r\n            <header>Expense for {month} - {year} Rs.{totalMonthlyExpense}</header>\r\n            <div className={classes.expense__container}>\r\n                {convertedExpenseData.map((expense, index) => <CategoryExpense key={index} expense={expense} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default UserMonthlyExpense","// extracted by mini-css-extract-plugin\nexport default {\"expense__filter_section\":\"UserMonthYearExpense_expense__filter_section__FSMqu\"};","import React,{ Fragment, useEffect, useMemo, useState } from \"react\";\r\nimport Spinner from \"../../../../Generic/Spinner/Spinner\"; \r\nimport UserMonthlyExpense from '../UserMonthlyExpense/UserMonthlyExpense'\r\n\r\nimport classes from './UserMonthYearExpense.module.css'\r\n\r\nconst UserMonthYearExpense = props => {\r\n     \r\n    const yearList = props.yearList\r\n    const yearMonthData = useMemo(() => props.yearMonthData,[props.yearMonthData])\r\n    const [monthList,setMonthList] = useState([])\r\n\r\n    const [selectedYear, setSelectedYear] = useState(yearList[0])\r\n    const [selectedMonth, setSelectedMonth] = useState('')\r\n \r\n    useEffect(() => {\r\n        const monthData = yearMonthData.filter(info => info.year === selectedYear)[0].months\r\n        const initialMonth = monthData[0]\r\n        setMonthList(monthData)\r\n        setSelectedMonth(prevSelectedMonth => {\r\n            const monthValue = monthData.find(month => month === prevSelectedMonth)\r\n            return monthValue? prevSelectedMonth : initialMonth\r\n        })\r\n        \r\n    }, [yearMonthData,selectedYear])\r\n\r\n\r\n    const changeYearHandler = event => {\r\n        setSelectedYear(event.target.value)\r\n    }\r\n    const changeMonthHandler = event => {\r\n        setSelectedMonth(event.target.value)\r\n    }\r\n    const isValidInput = selectedYear !== '' && selectedMonth !== '' \r\n     \r\n    if (!isValidInput) {\r\n        return <Spinner />\r\n    } else {\r\n        const monthlyExpenseData = props.allExpense.filter(expense => expense.year === selectedYear \r\n            && expense.month === selectedMonth) \r\n        return (\r\n            <Fragment>\r\n                <div className={classes.expense__filter_section}> \r\n                    <select onChange={changeYearHandler}>\r\n                        {\r\n                            props.yearMonthData.map(info => <option key={info.year} value={info.year}>{info.year}</option>)\r\n                        }\r\n                    </select>\r\n                    <select onChange={changeMonthHandler}>\r\n                        {\r\n                            monthList.map(month => {\r\n                                return <option key={month} value={month}>{month}</option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                </div>\r\n                {isValidInput && \r\n                    <UserMonthlyExpense \r\n                        month={selectedMonth} \r\n                        year={selectedYear} \r\n                        expenseDetail={monthlyExpenseData} \r\n                    />}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default UserMonthYearExpense","// extracted by mini-css-extract-plugin\nexport default {\"expense__section\":\"UserAllExpense_expense__section__vnvCW\"};","import { useEffect, useMemo, useState, useCallback, Fragment } from \"react\"\r\nimport useFetch from \"../../../../hooks/Use-fetch\"\r\nimport Spinner from '../../../Generic/Spinner/Spinner'\r\nimport UserMonthYearExpense from \"../AllExpense/UserMonthYearExpense/UserMonthYearExpense\";\r\n\r\nimport classes from './UserAllExpense.module.css'\r\n\r\n \r\n\r\n/* const DUMMY_EXPENSES = [\r\n    { 'amount': \"100\", 'category': \"Food1\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"100\", 'category': \"Food1\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"100\", 'category': \"Food1\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"100\", 'category': \"Food1\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"100\", 'category': \"Food1\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"100\", 'category': \"Food1\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n\r\n\r\n\r\n    { 'amount': \"100\", 'category': \"Food2\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"100\", 'category': \"Food2\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"100\", 'category': \"Food2\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"100\", 'category': \"Food2\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"100\", 'category': \"Food2\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n\r\n    { 'amount': \"100\", 'category': \"Food3\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"60\", 'category': \"Food4\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"100\", 'category': \"Food5\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n\r\n    { 'amount': \"100\", 'category': \"Food6\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"100\", 'category': \"Food6\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"100\", 'category': \"Food6\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"100\", 'category': \"Food6\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n    { 'amount': \"100\", 'category': \"Food6\", 'date': new Date(\"2022-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2022\" },\r\n\r\n    { 'amount': \"5000\", 'category': \"Rent\", 'date': new Date(\"2022-06-16\"), 'description': \"Rent\", 'month': \"June\", 'year': \"2022\" },\r\n\r\n\r\n    { 'amount': \"54\", 'category': \"Food\", 'date': new Date(\"2021-06-16\"), 'description': \"Snacks\", 'month': \"June\", 'year': \"2021\" },\r\n    { 'amount': \"100\", 'category': \"Food\", 'date': new Date(\"2022-07-01\"), 'description': \"Snacks\", 'month': \"July\", 'year': \"2022\" },\r\n    { 'amount': \"120\", 'category': \"Food\", 'date': new Date(\"2022-05-17\"), 'description': \"Meat\", 'month': \"May\", 'year': \"2022\" },\r\n    { 'amount': \"50\", 'category': \"Drinks\", 'date': new Date(\"2021-07-23\"), 'description': \"Pepsi\", 'month': \"July\", 'year': \"2021\" }\r\n].sort((a, b) => a.date - b.date) */\r\nconst UserAllExpense = props => {\r\n    const { userId } = props;\r\n    const USER_DB_URL = useMemo(() => `https://managebudget-12b75-default-rtdb.firebaseio.com/userDetail_DB_${userId}.json`, [userId]);\r\n\r\n    const [expense, setExpense] = useState(undefined)\r\n    const { isLoading, fetchExpense } = useFetch()\r\n\r\n    const getYearMonthData = (data) => {\r\n        let result = []\r\n        const getUniqueYear = [...new Set(data.map(expense => expense.year))].sort((a, b) => b - a)\r\n        getUniqueYear.forEach(yearValue => {\r\n            const yearData = expense.filter(expense => expense.year === yearValue)\r\n            const monthData = [...new Set(yearData.map(expense => expense.month))]\r\n            result.push({\r\n                year: yearValue,\r\n                months: monthData\r\n            })\r\n        });\r\n        return result\r\n    }\r\n\r\n    const fetchFoodHandler = useCallback(async () => {\r\n        const expenseData = await fetchExpense(USER_DB_URL)\r\n        setExpense(expenseData)\r\n    }, [USER_DB_URL, fetchExpense])\r\n\r\n    useEffect(() => {\r\n        fetchFoodHandler()\r\n    }, [fetchFoodHandler])\r\n\r\n    let yearMonthDetail = []\r\n    const isRecordFound = expense && expense.length > 0\r\n    const isDataLoaded = !isLoading && isRecordFound\r\n    if (isDataLoaded) {\r\n        yearMonthDetail = getYearMonthData(expense)\r\n    }\r\n\r\n    const yearList = [...new Set(yearMonthDetail.map(info => info.year))]\r\n    \r\n    if (isLoading) {\r\n        return <Spinner />\r\n    }\r\n    if (isRecordFound === false && !isLoading) {\r\n        return <article className='message__text norecord_message'>--- No Record Found! --- </article>\r\n    }\r\n    if (isDataLoaded) {\r\n        return (\r\n            <Fragment>\r\n                <header className={classes.expense__section}>Expense Dashboard</header>\r\n                {isDataLoaded &&\r\n                    <UserMonthYearExpense\r\n                        allExpense={expense}\r\n                        yearList={yearList}\r\n                        yearMonthData={yearMonthDetail}\r\n                    />}\r\n            </Fragment>\r\n\r\n        )\r\n    }\r\n\r\n}\r\nexport default UserAllExpense","import {  useState,useCallback } from \"react\"\r\n\r\nconst useFetch = () => {\r\n\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const convertDataToArray = async (data) => {\r\n        const userData = []\r\n        if (data != null) {\r\n            for (const key in data) {\r\n                userData.push({\r\n                    id: data[key].id,\r\n                    email: data[key].email,\r\n                    password: data[key].password,\r\n                    username: data[key].username,\r\n                    fullName: data[key].fullName,\r\n                })\r\n            }\r\n        }\r\n        return userData\r\n    }\r\n    const convertExpenseDataToArray = async (data) => {\r\n        const expenseData = []\r\n        if (data != null) {\r\n            for (const key in data) {\r\n                expenseData.push({\r\n                    description: data[key].description,\r\n                    category: data[key].category,\r\n                    amount: data[key].amount,\r\n                    date: new Date(data[key].date),\r\n                    month: (new Date(data[key].date)).toLocaleDateString('en-US',{month:'long'}),\r\n                    year:(new Date(data[key].date)).toLocaleDateString('en-US',{year:'numeric'})\r\n                })\r\n            }\r\n        }\r\n        return expenseData.sort((a, b) => a.date - b.date)\r\n    }\r\n    const sendRequest = async (url, requestConfig) => {\r\n        setIsLoading(true)\r\n        try {\r\n            const response = await fetch(url, {\r\n                method: requestConfig ? requestConfig.method : 'GET',\r\n                body: requestConfig ? JSON.stringify(requestConfig.body) : null,\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            const data = await response.json()\r\n            setIsLoading(false)\r\n            return data\r\n        } catch (error) {\r\n            throw new Error('Some Problem Occured!')\r\n        }\r\n    }\r\n    const fetchUserData = async (url) => {\r\n        try {\r\n            const data = await sendRequest(url, {})\r\n            const convertedData = await convertDataToArray(data)\r\n            setIsLoading(false)\r\n            return convertedData\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        setIsLoading(false)\r\n        return null\r\n    }\r\n    const checkUserExistance = async (url, email) => {\r\n        try {\r\n            const data = await sendRequest(url, {})\r\n            const convertedData = await convertDataToArray(data)\r\n            setIsLoading(false)\r\n            return convertedData.find(user => user.email === email)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        setIsLoading(false)\r\n        return null\r\n    }\r\n    const addUser = async (url, requestConfig) => {\r\n        try {\r\n            const data = await sendRequest(url, requestConfig)\r\n            if (data) {\r\n                setIsLoading(false)\r\n                return true\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        setIsLoading(false)\r\n        return false\r\n    }\r\n    const fetchUser = async (url,userId) => {\r\n        try {\r\n            const data = await sendRequest(url, {})\r\n            const convertedData = await convertDataToArray(data) \r\n            setIsLoading(false)\r\n            return convertedData.find(user => user.id === userId)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        setIsLoading(false)\r\n        return null\r\n    }\r\n    const addExpense = async (url,requestConfig) => { \r\n        try {\r\n            const data = await sendRequest(url, requestConfig)\r\n            if (data) {\r\n                setIsLoading(false)\r\n                return true\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        setIsLoading(false)\r\n        return false\r\n    }\r\n    const fetchExpense =   useCallback(async (url) => {\r\n        setIsLoading(true)\r\n        try {\r\n            const data = await sendRequest(url, {})\r\n            const convertedData = await convertExpenseDataToArray(data)\r\n            setIsLoading(false)\r\n            return convertedData\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        setIsLoading(false)\r\n        return null\r\n    },[])\r\n    return {\r\n        isLoading,\r\n        fetchUserData,\r\n        checkUserExistance,\r\n        addUser,\r\n        fetchUser,\r\n        addExpense,\r\n        fetchExpense\r\n    }\r\n\r\n}\r\nexport default useFetch","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["props","expense","className","classes","category","expenseDetail","map","index","day","Date","date","toLocaleDateString","month","weekday","description","amount","totalAmount","year","convertedExpenseData","data","convertedData","Set","forEach","categoryData","filter","reduce","sum","parseInt","push","convertBasedOnCategory","totalMonthlyExpense","yearList","yearMonthData","useMemo","useState","monthList","setMonthList","selectedYear","setSelectedYear","selectedMonth","setSelectedMonth","useEffect","monthData","info","months","initialMonth","prevSelectedMonth","find","isValidInput","monthlyExpenseData","allExpense","Fragment","onChange","event","target","value","Spinner","userId","USER_DB_URL","undefined","setExpense","useFetch","isLoading","fetchExpense","fetchFoodHandler","useCallback","expenseData","yearMonthDetail","isRecordFound","length","isDataLoaded","result","getUniqueYear","sort","a","b","yearValue","yearData","getYearMonthData","setIsLoading","convertDataToArray","userData","key","id","email","password","username","fullName","convertExpenseDataToArray","sendRequest","url","requestConfig","fetch","method","body","JSON","stringify","headers","response","json","Error","fetchUserData","console","log","checkUserExistance","user","addUser","fetchUser","addExpense","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}